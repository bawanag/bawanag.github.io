<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bawanag Blog</title>
  
  
  <link href="https://bawanag.github.io/atom.xml" rel="self"/>
  
  <link href="https://bawanag.github.io/"/>
  <updated>2021-01-27T15:53:04.309Z</updated>
  <id>https://bawanag.github.io/</id>
  
  <author>
    <name>Yuanjian Tao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Comparison of Different Deep Learning technologies toward Choosing Appropriate Convolution Neural Network architecture</title>
    <link href="https://bawanag.github.io/2020/12/20/Comparison-of-Different-Deep-Learning-Technologies/"/>
    <id>https://bawanag.github.io/2020/12/20/Comparison-of-Different-Deep-Learning-Technologies/</id>
    <published>2020-12-20T18:41:20.000Z</published>
    <updated>2021-01-27T15:53:04.309Z</updated>
    
    <content type="html"><![CDATA[<embed src="./Comparison-of-Different-Deep-Learning-Technologies.pdf" width="100%" height="1000" type="application/pdf">]]></content>
    
    
      
      
    <summary type="html">&lt;embed src=&quot;./Comparison-of-Different-Deep-Learning-Technologies.pdf&quot; width=&quot;100%&quot; height=&quot;1000&quot; type=&quot;application/pdf&quot;&gt;

</summary>
      
    
    
    
    <category term="Dissertation" scheme="https://bawanag.github.io/categories/Dissertation/"/>
    
    
    <category term="Deep Learning" scheme="https://bawanag.github.io/tags/Deep-Learning/"/>
    
    <category term="Artificial Intelligence" scheme="https://bawanag.github.io/tags/Artificial-Intelligence/"/>
    
    <category term="Dissertation" scheme="https://bawanag.github.io/tags/Dissertation/"/>
    
    <category term="CNNs" scheme="https://bawanag.github.io/tags/CNNs/"/>
    
  </entry>
  
  <entry>
    <title>使用简单的多层感知器（Muti-Perceptron）通过花瓣以及花萼的长宽区分变色鸢尾，山鸢尾，以及维吉尼亚鸢尾</title>
    <link href="https://bawanag.github.io/2020/06/25/%E4%BD%BF%E7%94%A8%E7%AE%80%E5%8D%95%E7%9A%84%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E5%99%A8%EF%BC%88Muti-Perceptron%EF%BC%89%E9%80%9A%E8%BF%87%E8%8A%B1%E7%93%A3%E4%BB%A5%E5%8F%8A%E8%8A%B1%E8%90%BC%E7%9A%84%E9%95%BF%E5%AE%BD%E5%8C%BA%E5%88%86%E5%8F%98%E8%89%B2%E9%B8%A2%E5%B0%BE%EF%BC%8C%E5%B1%B1%E9%B8%A2%E5%B0%BE%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%BB%B4%E5%90%89%E5%B0%BC%E4%BA%9A%E9%B8%A2%E5%B0%BE/"/>
    <id>https://bawanag.github.io/2020/06/25/%E4%BD%BF%E7%94%A8%E7%AE%80%E5%8D%95%E7%9A%84%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E5%99%A8%EF%BC%88Muti-Perceptron%EF%BC%89%E9%80%9A%E8%BF%87%E8%8A%B1%E7%93%A3%E4%BB%A5%E5%8F%8A%E8%8A%B1%E8%90%BC%E7%9A%84%E9%95%BF%E5%AE%BD%E5%8C%BA%E5%88%86%E5%8F%98%E8%89%B2%E9%B8%A2%E5%B0%BE%EF%BC%8C%E5%B1%B1%E9%B8%A2%E5%B0%BE%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%BB%B4%E5%90%89%E5%B0%BC%E4%BA%9A%E9%B8%A2%E5%B0%BE/</id>
    <published>2020-06-25T10:45:00.000Z</published>
    <updated>2021-01-19T03:13:01.362Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/06/25/%E4%BD%BF%E7%94%A8%E7%AE%80%E5%8D%95%E7%9A%84%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E5%99%A8%EF%BC%88Muti-Perceptron%EF%BC%89%E9%80%9A%E8%BF%87%E8%8A%B1%E7%93%A3%E4%BB%A5%E5%8F%8A%E8%8A%B1%E8%90%BC%E7%9A%84%E9%95%BF%E5%AE%BD%E5%8C%BA%E5%88%86%E5%8F%98%E8%89%B2%E9%B8%A2%E5%B0%BE%EF%BC%8C%E5%B1%B1%E9%B8%A2%E5%B0%BE%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%BB%B4%E5%90%89%E5%B0%BC%E4%BA%9A%E9%B8%A2%E5%B0%BE/image-20210119104809445.png" class="" title="image-20210119104809445"><img src="/2020/06/25/%E4%BD%BF%E7%94%A8%E7%AE%80%E5%8D%95%E7%9A%84%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E5%99%A8%EF%BC%88Muti-Perceptron%EF%BC%89%E9%80%9A%E8%BF%87%E8%8A%B1%E7%93%A3%E4%BB%A5%E5%8F%8A%E8%8A%B1%E8%90%BC%E7%9A%84%E9%95%BF%E5%AE%BD%E5%8C%BA%E5%88%86%E5%8F%98%E8%89%B2%E9%B8%A2%E5%B0%BE%EF%BC%8C%E5%B1%B1%E9%B8%A2%E5%B0%BE%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%BB%B4%E5%90%89%E5%B0%BC%E4%BA%9A%E9%B8%A2%E5%B0%BE/image-20210119104823857.png" class="" title="image-20210119104823857">]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2020/06/25/%E4%BD%BF%E7%94%A8%E7%AE%80%E5%8D%95%E7%9A%84%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E5%99%A8%EF%BC%88Muti-Perceptron%EF%</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用循环神经网络（RecurrentNeuralNetwork）以及卷积神经网络（CNN）生成图片标题</title>
    <link href="https://bawanag.github.io/2020/05/15/%E4%BD%BF%E7%94%A8%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88RecurrentNeuralNetwork%EF%BC%89%E4%BB%A5%E5%8F%8A%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88CNN%EF%BC%89%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87%E6%A0%87%E9%A2%98/"/>
    <id>https://bawanag.github.io/2020/05/15/%E4%BD%BF%E7%94%A8%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88RecurrentNeuralNetwork%EF%BC%89%E4%BB%A5%E5%8F%8A%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88CNN%EF%BC%89%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87%E6%A0%87%E9%A2%98/</id>
    <published>2020-05-15T02:55:00.000Z</published>
    <updated>2021-01-29T10:22:02.185Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>作为机械学习的重要领域，CNNs作为图像识别的重要工具，目前的技术已经较为成熟，根据2021年1月29日的ImageNet1000排名分类数据显示<a href="#refer-anchor-1"><sup>1</sup></a> ，排名最高的模型Meta Pseudo Labels<a href="#refer-anchor-2"><sup>2</sup></a>得到了高达90.2%的Top1精准度以及98.8%的Top5精准度，当然，其需要训练的参数量也高达480M.。 大参数量的模型在效率上基于目前的硬件算力肯定难以满足效率上的需要。即便如此，可以在大部分手机流畅运行的MobileNetV2模型也拥有高达90%的Top5效率<a href="#refer-anchor-3"><sup>3</sup></a>。因此，对识别成功物体类型方面CNN有极高的性能以及极低的运算代价。因此，CNN的技术进步为后续人工智能的应用发展奠定了坚实的基础。</p><img src="/2020/05/15/%E4%BD%BF%E7%94%A8%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88RecurrentNeuralNetwork%EF%BC%89%E4%BB%A5%E5%8F%8A%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88CNN%EF%BC%89%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87%E6%A0%87%E9%A2%98/Top5_Accuracy-1611915715089.png" class="" title="Top5_Accuracy"><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><p>生成CNNs编码器（encoder）以及RNN解码器（decoder）模型，将其配合使用共同生成指定图片标题，效果如下图所示：</p><img src="/2020/05/15/%E4%BD%BF%E7%94%A8%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88RecurrentNeuralNetwork%EF%BC%89%E4%BB%A5%E5%8F%8A%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88CNN%EF%BC%89%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87%E6%A0%87%E9%A2%98/image-20210129161140690.png" class="" title="image-20210129161140690"><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><div id="refer-anchor-1"></div> [1] [Image Classification on ImageNet](https://paperswithcode.com/sota/image-classification-on-imagenet)<div id="refer-anchor-2"></div> [2] [Meta Pseudo Labels](https://paperswithcode.com/paper/meta-pseudo-labels)<div id="refer-anchor-3"></div><p> [3] <a href="https://bawanag.github.io/2020/12/20/Comparison-of-Different-Deep-Learning-Technologies/">Comparison of Different Deep Learning technologies toward Choosing Appropriate Convolution Neural Network architecture</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;作为机械学习的重要领域，CNNs作为图像识别的重要工具，目前的技术已经较为成熟，根据2021年1月29日的ImageNet1000排名分类数</summary>
      
    
    
    
    <category term="Tutorial" scheme="https://bawanag.github.io/categories/Tutorial/"/>
    
    
    <category term="Deep Learning" scheme="https://bawanag.github.io/tags/Deep-Learning/"/>
    
    <category term="Artificial Intelligence" scheme="https://bawanag.github.io/tags/Artificial-Intelligence/"/>
    
    <category term="RNN" scheme="https://bawanag.github.io/tags/RNN/"/>
    
  </entry>
  
  <entry>
    <title>群辉docker搭建Hexo踩坑记</title>
    <link href="https://bawanag.github.io/2020/01/20/Hexo-%E7%BE%A4%E8%BE%89%E6%90%AD%E5%BB%BA%E9%87%87%E5%9D%91%E8%AE%B0/"/>
    <id>https://bawanag.github.io/2020/01/20/Hexo-%E7%BE%A4%E8%BE%89%E6%90%AD%E5%BB%BA%E9%87%87%E5%9D%91%E8%AE%B0/</id>
    <published>2020-01-20T07:36:00.000Z</published>
    <updated>2021-01-29T02:29:27.575Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo-以及-Hexo-admin-搭建踩坑"><a href="#Hexo-以及-Hexo-admin-搭建踩坑" class="headerlink" title="Hexo 以及 Hexo admin 搭建踩坑"></a>Hexo 以及 Hexo admin 搭建踩坑</h2><p>部分教程引用<a href="https://drunkfish.me/hexo/">https://drunkfish.me/hexo/</a></p><p>群辉可以直接使用spurin/hexo docker镜像</p><p>虽然这个镜像集成了Hexo以及Hexo admin，但是Hexo admin是在线npm安装，如果在国内使用镜像会出现Hexo admin 无法使用的情况</p><p>解决方案是按照<br><a href="https://blog.csdn.net/yypsober/article/details/51906616">https://blog.csdn.net/yypsober/article/details/51906616</a><br>给出的方案<strong>添加taobao npm源</strong>，此时不会报网络错误的错以及加快下载安装速度</p><p>如果使用Hexo admin添加新的博客，即使在——config.yml上设置了post_asset_folder: true，新建文章并不会同步添加存放二进制文件的同名文件夹，操作如下图所示</p><img src="/2020/01/20/Hexo-%E7%BE%A4%E8%BE%89%E6%90%AD%E5%BB%BA%E9%87%87%E5%9D%91%E8%AE%B0/image-20201220234313401.png" class="" title="image-20201220234313401"><p>但直接在命令行键入 Hexo new &lt;文章名称&gt; 创建文章是可以同步创建文章以及对应的资源文件夹：</p><img src="/2020/01/20/Hexo-%E7%BE%A4%E8%BE%89%E6%90%AD%E5%BB%BA%E9%87%87%E5%9D%91%E8%AE%B0/image-20201220234429981.png" class="" title="image-20201220234429981"><p>但是使用该方法需要进入群辉docker的终端机后台进行命令行键入，同时对中文文章名称支持不好，这个问题可以使用Hexo admin创建文章后，直接手动在群辉映射smb的source文件夹下手动创建。</p><h2 id="GitHub-io-申请以及相关踩坑"><a href="#GitHub-io-申请以及相关踩坑" class="headerlink" title="GitHub io 申请以及相关踩坑"></a>GitHub io 申请以及相关踩坑</h2><p>根据以上文章申请搭建GitHub pages 是没问题，但是创建的新账号需要将docker上面<strong>指定的邮箱设置为public</strong>，要不然会提示权限不足或者邮箱错误。</p><img src="/2020/01/20/Hexo-%E7%BE%A4%E8%BE%89%E6%90%AD%E5%BB%BA%E9%87%87%E5%9D%91%E8%AE%B0/image-20201220235425460.png" class="" title="image-20201220235425460"><p>即时申请的GitHub仓库以及上传的静态页面是无法立即更新页面的，根据GitHub文档说明所有的更新需要20分钟才会生效，所以第一时间打开<username>.github.io为404不用着急（这点坑害了好久）</p><img src="/2020/01/20/Hexo-%E7%BE%A4%E8%BE%89%E6%90%AD%E5%BB%BA%E9%87%87%E5%9D%91%E8%AE%B0/image-20201220235845811.png" class="" title="image-20201220235845811"><p>但是关于以上的问题，其实只要保证hexo g上是成功上传的时候是可以实时更新没问题，但是<strong>有一个大坑</strong>是在<strong>Hexo Admin</strong> ! 根据教程调Hexo Admin是可以成功Hexo g之后Hexo d，并且显示git提交成功，但是大坑在于它根本就没有上传成功，所以出现git上长时间没更新网页请更多检查Hexo Admin的配置以及git上传配置，ssh配置，是否重新初始化docker都会影响Hexo admin是否可以成功上传。</p><p>关于重新导入ssh秘钥，貌似不成功，但是hexo是基于linux ssh架构的机器，理论上ssh可以正常导入则git可以直接使用ssh秘钥。</p><h2 id="编辑Markdown博客网页"><a href="#编辑Markdown博客网页" class="headerlink" title="编辑Markdown博客网页"></a>编辑Markdown博客网页</h2><p>根据我踩坑的经验，编辑md文件基本上分为3大类型：</p><ol><li>管理网页在线编辑</li><li>直接Vim console编辑</li><li>下载md 文件后完成编辑上传</li><li>使用编辑工具，例如vscode+插件、typora..</li></ol><p>但是这一切的方法都无法避开的问题就是插入图片的问题，1~3的方案都行需要而外上传图片之后进行图片的关联，图片关联需要图片的绝对路径或者相对路径。</p><p>但是使用这个方案进行md 编辑会极大影响博客编写效率。</p><p>使用vscode需要分别安装vscode+markdown插件，图片粘贴插件以及实时查看md效果插件，会使得本来装满插件的vscode变得更加臃肿，而且这个方案最大的弊端是需要本地安装hexo，对于服务器在群辉上的用户来说太过臃肿。</p><p>我这边选择了typora工具进行编辑，该工具体积小巧，点开即用，可以根据<a href="https://cloud.tencent.com/developer/article/1600295">https://cloud.tencent.com/developer/article/1600295</a> 进行图片实时上传和在线浏览，直接打开smb关联的群辉位置即可编辑，简单好用, 但是注意在该教程最后需要安装<strong>hexo-image-link</strong> 插件才可以在博客上正确显示图片</p><h2 id="评论模块"><a href="#评论模块" class="headerlink" title="评论模块"></a><strong>评论模块</strong></h2><p>评论模块应该是最坑的模块了，踩了无数的坑。</p><p>首先评论模块是集成在主题scheme里面的，每个主题模板相互独立，而且评论引擎不同评论的原理，效果也不同，部分引擎和主题因为年久失修，会留下一堆坑让大家踩，这边还是推荐如果不想像我这样执着于一个喜欢的主题而疯狂踩坑的话，请移步更新较为频繁的主题。</p><h3 id="年久失修的评论插件是个大坑（没错gitment说的就是你）"><a href="#年久失修的评论插件是个大坑（没错gitment说的就是你）" class="headerlink" title="年久失修的评论插件是个大坑（没错gitment说的就是你）"></a>年久失修的评论插件是个大坑（没错gitment说的就是你）</h3><p>我这边使用的是Hexo Fun作为博客的主题，该主题提供了gitment 以及 gittalk来作为评论引擎，作为博客小白的我直接默认调用了gitment，发现该引擎一堆的坑。</p><p>首先该 引擎年久失修，如果安装使用旧版的css 以及js地址是无法使用的，必须要找一个合适的地址甚至自己搭一个css或者js的服务器进行gitment下载，<u>真的是坑无数小弟让了让了</u>。</p><h3 id="寻找一个适合自己的评论插件"><a href="#寻找一个适合自己的评论插件" class="headerlink" title="寻找一个适合自己的评论插件"></a>寻找一个适合自己的评论插件</h3><p>这边推荐一个比较好用的评论插件<strong>gittalk</strong>（2021年1月29日评，万一它是下个年久失修的请移步），该插件的坑有以下几点：</p><p>创建Application的时候请创建<strong>OAuth APPs！！！</strong>    <strong>OAuth APPs！！！</strong>  <strong>OAuth APPs！！！</strong> 而不是GitHub APPs，这坑困扰了我十分久，而且我还尝试了再GitHub APPs下勾选了OAuth选项，实在是大坑，根本没法用，一直**<u>报错Bad credentials</u>**，在偶然的setting乱点里面发现了这个坑！！！，而且大家务必检查好Client ID和secret是否正确，包括是否需要加引号（保证数值传递到js脚本）</p><img src="/2020/01/20/Hexo-%E7%BE%A4%E8%BE%89%E6%90%AD%E5%BB%BA%E9%87%87%E5%9D%91%E8%AE%B0/image-20210129001505683.png" class="" title="image-20210129001505683"><p>输入正确的Client Id 以及secret之后（网上各种需要加引号不加引号的，还是得看是否吧值传入，反正我是加的）还有一个大坑是<strong>未找到相关的Issues进行评论</strong>. 首先要在代码里面包含md5.min.js生成标题对应的哈希值，将标题内容缩短至50个字符以内，这边fun主题是包含这段代码的。</p><img src="/2020/01/20/Hexo-%E7%BE%A4%E8%BE%89%E6%90%AD%E5%BB%BA%E9%87%87%E5%9D%91%E8%AE%B0/image-20210129002331129.png" class="" title="image-20210129002331129"><p>但是呀但是，不是因为浏览器缓存，如果想快速看到部署后的结果还是得先清理缓存，或者使用无痕窗口嘛，但是这块它会无限的跳出以下错误：</p><img src="/2020/01/20/Hexo-%E7%BE%A4%E8%BE%89%E6%90%AD%E5%BB%BA%E9%87%87%E5%9D%91%E8%AE%B0/image-20210129002459245.png" class="" title="image-20210129002459245"><p>这时候请移步到正常浏览界面，登陆GitHub后使用GitHub的token对评论进行初始化。问题over</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>根据几天的博客搭建踩坑，Hexo的博客服务器已经成功运行起来了，最后给出整体方案。</p><ol><li>为了方便备份，方便单独部署以及数据隔离，使用docker+群辉的方式进行Hexo的安装</li><li>docker上的项目已经年久失修，很多链接国内已经失效，需要进入控制台重新配置</li><li>白嫖总是有点问题，git上同步时间以及搭建方式都有小坑</li><li>轻量化的markdown是难以跟主流的编辑器比较的，所以使用趁手的编辑器可以极大的提高编辑效率，这边比较推荐typora</li><li>自带的评论框架非常坑，如果想闭坑请移步高更新率的主题，否则就啃食主题源代码或者自己编写主题吧~</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hexo-以及-Hexo-admin-搭建踩坑&quot;&gt;&lt;a href=&quot;#Hexo-以及-Hexo-admin-搭建踩坑&quot; class=&quot;headerlink&quot; title=&quot;Hexo 以及 Hexo admin 搭建踩坑&quot;&gt;&lt;/a&gt;Hexo 以及 Hexo admi</summary>
      
    
    
    
    <category term="Experience" scheme="https://bawanag.github.io/categories/Experience/"/>
    
    
    <category term="Synology" scheme="https://bawanag.github.io/tags/Synology/"/>
    
    <category term="Docker" scheme="https://bawanag.github.io/tags/Docker/"/>
    
    <category term="Github" scheme="https://bawanag.github.io/tags/Github/"/>
    
    <category term="Hexo" scheme="https://bawanag.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
